<script>
    const h1Elem = document.querySelector('h1');
    const titleElem = document.querySelector('title');
    const currentDateString = (new Date()).toDateString();
    h1Elem.textContent = `${h1Elem.textContent} - ${currentDateString}`;
    titleElem.textContent = `${titleElem.textContent} - ${currentDateString}`;

    const lat = document.getElementById('location-lat');
    const long = document.getElementById('location-long');

    const locationButton = document.getElementById('location-button');

    if (navigator.geolocation) {
        locationButton.addEventListener('click', () => {
            navigator.geolocation.getCurrentPosition((pos) => {
                const { latitude, longitude } = pos.coords;

                lat.textContent = latitude;
                long.textContent = longitude;
            }, (err) => {
                console.error(err);

                lat.textContent = 'Error';
                long.textContent = 'Error';
            });
        });
    }

    function sortTableDataByLocation(tableData, lat, long) {
        tableData
            .slice(1)
            .forEach(tableRow => {
                const [rowLat, rowLong] = [
                    parseFloat(tableRow[5], 10),
                    parseFloat(tableRow[6], 10)
                ];
                const distance = getDistanceFromLatLonInMiles(rowLat, rowLong, lat, long);

                if (typeof tableRow[7] === 'number') {
                    tableRow[7] = distance;
                } else {
                    tableRow.push(distance);
                }
            });

        const sortedTableData = tableData
            .slice(1)
            .sort((row1, row2) => {
                return row1[7] - row2[7];
            });
        
        // add back header row, with additional 'Distance in miles' table header
        if (typeof tableData[7] !== 'string') {
            sortedTableData.unshift([...tableData[0], 'Distance in miles']);
        }

        return sortedTableData;
    }

    // https://stackoverflow.com/a/27943 - Haversine formula
    const R = 6371 * 0.6213712; // Radius of the earth in miles
    const radianDegreeRatio = Math.PI / 180;
    function getDistanceFromLatLonInMiles(lat1, lon1, lat2, lon2) {
        const dLat = (lat2 - lat1) * radianDegreeRatio;
        const dLon = (lon2 - lon1) * radianDegreeRatio;
        const halfLat = dLat / 2;
        const halfLong = dLon / 2;
        const a = 
            Math.pow(Math.sin(halfLat), 2) +
            Math.cos(lat1 * radianDegreeRatio) * Math.cos(lat2 * radianDegreeRatio) * 
            Math.pow(Math.sin(halfLong), 2); 
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)); 
        const d = R * c; // Distance in miles
        return d;
    }
</script>